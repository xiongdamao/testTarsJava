// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.7.2.
// **********************************************************************

package com.qq.tars.quickstart.client.testapp;

import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.annotation.*;
import com.qq.tars.common.support.Holder;
import java.util.concurrent.CompletableFuture;

@Servant
public interface HelloPrx {

	 int test();

	 int test(@TarsContext java.util.Map<String, String> ctx);

	 void async_test(@TarsCallback HelloPrxCallback callback);

	 void async_test(@TarsCallback HelloPrxCallback callback, @TarsContext java.util.Map<String, String> ctx);

	 CompletableFuture<java.lang.Integer>  promise_test();

	 CompletableFuture<java.lang.Integer>  promise_test(@TarsContext java.util.Map<String, String> ctx);

	 int testHello(@TarsMethodParameter(name="sReq")String sReq, @TarsHolder(name="sRsp") Holder<String> sRsp);

	 int testHello(@TarsMethodParameter(name="sReq")String sReq, @TarsHolder(name="sRsp") Holder<String> sRsp, @TarsContext java.util.Map<String, String> ctx);

	 void async_testHello(@TarsCallback HelloPrxCallback callback, @TarsMethodParameter(name="sReq")String sReq);

	 void async_testHello(@TarsCallback HelloPrxCallback callback, @TarsMethodParameter(name="sReq")String sReq, @TarsContext java.util.Map<String, String> ctx);

	 CompletableFuture<java.lang.Integer>  promise_testHello(@TarsMethodParameter(name="sReq")String sReq, @TarsHolder(name="sRsp") Holder<String> sRsp);

	 CompletableFuture<java.lang.Integer>  promise_testHello(@TarsMethodParameter(name="sReq")String sReq, @TarsHolder(name="sRsp") Holder<String> sRsp, @TarsContext java.util.Map<String, String> ctx);
}
